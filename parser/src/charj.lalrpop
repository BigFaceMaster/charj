use std::str::FromStr;

use crate::location;
use crate::lexer;
use crate::token::{Tok};
use crate::error::LexicalError;

grammar<'input>(input: &'input str);

pub Charj: i32 = {
//    <n:Num> => n,
//    "(" <t:Charj> ")" => t,
};

// Num: i32 = <s:r"[0-9]+"> => i32::from_str(s).unwrap();

extern {
    type Location = location::Location;
    type Error = LexicalError;

    enum Tok<'input> {
        Identifier => Tok::Identifier(<&'input str>),
        StringLiteral => Tok::StringLiteral(<&'input str>),

        ";" => Tok::Semicolon,
    }
}

