use std::str::FromStr;

use crate::location;
use crate::lexer;
use crate::token::{Tok};
use crate::error::LexicalError;
use crate::pt::*;

grammar<'input>(input: &'input str);

pub Charj: SourceUnit = {
    SourceUnitPart+ => SourceUnit(<>)
};

SourceUnitPart: SourceUnitPart = {
    ImportDirective => SourceUnitPart::ImportDirective(<>),
}

ImportDirective: Import = {
    "import" <s:StringLiteral> ";" => Import::Plain(s)
}

extern {
    type Location = location::Location;
    type Error = LexicalError;

    enum Tok<'input> {
        Identifier => Tok::Identifier(<&'input str>),
        StringLiteral => Tok::StringLiteral(<&'input str>),

        "import" => Tok::Import,
        ";" => Tok::Semicolon,
    }
}

